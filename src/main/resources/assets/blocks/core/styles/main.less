/*
 * Copyright 2017 Republic of Reinvention bvba. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Overlay when editing and for dialogs
@import (reference) "/constants/blocks/core?type=less";
@import (reference) "/constants/blocks/media/core?type=less";
//-----LIBRARIES-----
@import (reference) "/assets/webjars/less-animate/1.0.0/source/pulse.less";
@import (reference) "/assets/webjars/font-awesome/4.3.0/less/variables.less";
@import (reference) "/assets/webjars/font-awesome/4.3.0/less/core.less";
@import (reference) "/assets/webjars/font-awesome/4.3.0/less/icons.less";
@import (reference) "/assets/webjars/font-awesome/4.3.0/less/animated.less";
@import (reference) "/assets/webjars/font-awesome/4.3.0/less/mixins.less";
@import (reference) "/assets/webjars/font-awesome/4.3.0/less/rotated-flipped.less";
@import (reference) "/assets/webjars/font-awesome/4.3.0/less/fixed-width.less";
@import (reference) "/assets/webjars/font-awesome/4.3.0/less/larger.less";
@import (reference) "/assets/webjars/font-awesome/4.3.0/less/list.less";
@import (reference) "/assets/base/core/styles/loader.less";
@import (reference) "/assets/blocks/media/core/styles/finder.less";
//-----BASIC BOOTSTRAP MIXINS-----
@import (reference) "/assets/webjars/bootstrap/3.3.4/less/variables.less";
@import (reference) "/assets/webjars/bootstrap/3.3.4/less/mixins.less";
@import (reference) "/assets/webjars/bootstrap/3.3.4/less/utilities.less";
// Reset and dependencies
@import (reference) "/assets/webjars/bootstrap/3.3.4/less/normalize.less";
// Core CSS
@import (reference) "/assets/webjars/bootstrap/3.3.4/less/buttons.less";
@import (reference) "/assets/webjars/bootstrap/3.3.4/less/forms.less";
// Components
@import (reference) "/assets/webjars/bootstrap/3.3.4/less/dropdowns.less";
@import (reference) "/assets/webjars/bootstrap/3.3.4/less/button-groups.less";
@import (reference) "/assets/webjars/bootstrap/3.3.4/less/input-groups.less";
@import (reference) "/assets/webjars/bootstrap/3.3.4/less/panels.less";
@import (reference) "/assets/webjars/bootstrap/3.3.4/less/type.less";
@import (reference) "/assets/webjars/bootstrap/3.3.4/less/thumbnails.less";
@import (reference) "/assets/webjars/bootstrap/3.3.4/less/wells.less";
@import (reference) "/assets/webjars/bootstrap/3.3.4/less/mixins/text-overflow.less";
//-----MIXINS-----
@import (reference) "/assets/blocks/core/styles/mixins.less";

//-----VARIABLES-----
//this is the starting point of our z-indexes
@sidebarZ: @zindex-navbar;
//the idea is that the overlay controls should slide under the navbar
//and are always under modal notification panels
@overlayZ: @sidebarZ - 10;
@mainMenuHeight: 40px;
@initSidebarWidth: 0%;

//-----MAIN-----
html {
  position: relative;
  min-height: 100%;

  //don't enable: it messes up the default bootstrap sticky footer
  //height: 100%;
}

body.@{BODY_EDIT_MODE_CLASS} {
  //this will allow the sidebar and the page wrapper scroll independently from the body (now done in js code)
  //overflow: hidden;

  iframe {
    pointer-events: none;
  }
}

//setup feedback for save/delete/... buttons
.btn {
  &.@{BTN_BUSY_CLASS},
  &.@{BTN_SUCCESS_CLASS} {

    //hide all elements inside it
    & > * {
      display: none;
    }
    //change the contents of the icon
    & > .fa {
      display: inline-block;
    }
  }
  &.@{BTN_BUSY_CLASS} {
    //change the contents of the icon
    & > .fa {
      &:extend(.fa-circle-o-notch all);
    }
  }
  //needs to come after the BUSY class because it overwrites it
  &.@{BTN_SUCCESS_CLASS} {
    & > .fa {
      &:extend(.fa-check-circle all);
    }
  }
}

//some perfect scrollbar tweaking
.ps-container > .ps-scrollbar-y-rail > .ps-scrollbar-y {
  width: 4px;
}

//some modal dialog styling
.bootstrap-dialog {

  .modal-header {
    padding-top: 22px;
    padding-left: 25px;
    padding-right: 25px;
  }

  &.type-default {
    .bootstrap-dialog-title {
      font-weight: bold;
    }
  }
}

.@{BLOCK_OVERLAY_WRAPPER_CLASS},
.@{SURFACE_WRAPPER_CLASS},
.@{RESIZER_WRAPPER_CLASS},
.@{DROPSPOT_WRAPPER_CLASS} {

  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;

  //this will also make sure we don't click on the overlay
  //(causing a focus switch) when we click in the sidebar
  //because the sidebar will be in front of the overlays
  z-index: @overlayZ;

  // this will disable events on the wrappers:
  // because they span the entire page, they'd always receive all events
  // when clicked, while their sole functionality is to groups surfaces
  pointer-events: none;
}

.@{BLOCK_OVERLAY_WRAPPER_CLASS} {

  @focusedBlockBorderWidth: unit(@FOCUSED_BLOCK_BORDER_PX, px);

  //MIXINS FOR OVERLAYS
  .defaultBorder(@blankEdges: true) {

    border: @focusedBlockBorderWidth dashed fadeout(@brand-primary, 50%);

    &.left when (@blankEdges) {
      border-left: none;
    }
    &.top when (@blankEdges) {
      border-top: none;
    }
  }

  // The OVERLAY_NO_EVENTS_CLASS class will be set on the overlay wrapper
  // when we want to disable events on all overlays (both the wrappers and surfaces).
  // This way, the events will pas along to lower elements (those under the overlay)
  // acting like the overlays don't exist and enables us to detect
  // on which element we really clicked, while keeping to the overlay
  // visible. See mouse.js
  &:not(.@{OVERLAY_NO_EVENTS_CLASS}) {
    // By default, we'll (re-)enable events on the real surfaces.
    // Note: dropspots shouldn't receive events, they're just ornamental
    .@{SURFACE_WRAPPER_CLASS},
    .@{RESIZER_WRAPPER_CLASS} {
      & > * {
        pointer-events: auto;
      }
    }
  }

  //Note that below, the BLOCK_FOCUSED_CLASS will be used both on the wrapper
  //and the overlay to indicate:
  // - we have an overlay focused inside the overlay wrapper (eg. to hide the resizers)
  // - which overlay is currently focused (disable events on that overlay)
  &.@{BLOCK_FOCUSED_CLASS} {

    .@{SURFACE_WRAPPER_CLASS} > * {

      background-color: rgba(255, 255, 255, 0.9);
      border-color: transparent;
      .transition(background-color 100ms ease-in-out);

      //this is the focus class on the inner div, not the wrapper
      &.@{BLOCK_FOCUSED_CLASS} {
        .defaultBorder(false);
        background-color: transparent;

        // we can basically choose between these two:
        // - the first will completely remove the block, passing all events
        //   to the inner elements
        // - the second will simulate the same, without removing the surface,
        //   still able to eg. show it's border
        // For now, let's start with the second and see what happens
        //display: none;
        pointer-events: none;

        // the floating point absolute positioning of the overlays
        // don't always play nice with the borders of adjoining overlays,
        // this will make sure the border of the focused overlay looks best
        z-index: @overlayZ + 1;
      }
    }

    //hide all the resizers when a block is focused
    .@{RESIZER_WRAPPER_CLASS} {
      display: none;
    }
  }

  //This means:
  // - there's no overlay focused inside the wrapper
  // - we're not dragging any overlay around
  &:not(.@{BLOCK_FOCUSED_CLASS}):not(.@{OVERLAY_DRAG_CLASS}) {

    .@{SURFACE_WRAPPER_CLASS} > *:hover {
      .box-shadow(0px 0px 10px @brand-primary);
      border: @focusedBlockBorderWidth solid fadeout(@brand-primary, 50%);
      background-color: fadeout(@brand-primary, 80%);
    }
  }

  .@{SURFACE_WRAPPER_CLASS} > * {

    position: absolute;
    top: 0px;
    left: 0px;
    right: 0px;
    bottom: 0px;
    z-index: @overlayZ;

    .defaultBorder();

    //this is probably a good general choice
    cursor: pointer;

    &.@{OVERLAY_DRAG_CLASS} {
      background-color: rgba(00, 102, 204, 0.5);
    }

    border: none;
    &.top- {
      border-top: 1px solid red !important;
    }
    &.right- {
      border-right: 1px solid red !important;
    }
    &.bottom- {
      border-bottom: 1px solid red !important;
    }
    &.left- {
      border-left: 1px solid red !important;
    }

    &.@{BLOCK_HIGHLIGHT_CLASS} {

      //note: this changes the background of the overlay, not the block itself
      @keyframes highlight {
        0% {
          background: fade(@brand-primary, 0%);
        }
        30% {
          background: fade(@brand-primary, 100%);
        }
        80% {
          background: fade(@brand-primary, 0%);
        }
      }

      animation: highlight unit(@BLOCK_HIGHLIGHT_DURATION_MILLIS, ms);
    }
  }

  .@{DROPSPOT_WRAPPER_CLASS} > * {

    @startColor: @brand-primary;
    @startColorHex: argb(@startColor);
    @stopColor: fadeout(@startColor, 100%);
    @stopColorHex: argb(@stopColor);
    @width: ~"@{BLOCKS_DROPSPOT_BORDER_WIDTH}px";
    @style: solid;
    @offsetPct: 5%;
    @startPct: @offsetPct;
    @stopPct: 100% - @offsetPct;

    position: absolute;
    top: 0px;
    left: 0px;
    right: 0px;
    bottom: 0px;
    //the dropspot line should be in front of both the block overlay and the resizer
    z-index: @overlayZ + 2;

    border: none;

    @border: 3px solid @startColor;
    @arrowColor: fade(@startColor, 50%);
    @imgWidth: @BLOCKS_DROPSPOT_BORDER_WIDTH - 1;
    @imgWidthHalf: @imgWidth / 2;
    @halfWidth: @imgWidthHalf * 1px;

    &.top {
      height: @width;
      //margin-top: @halfWidth;
      border-top: @border;
      //cat /home/bram/Projects/Workspace/idea/com.beligum.blocks.core/src/main/resources/assets/blocks/core/images/arrow_up.svg | tr -d '\n' | tr '"' '\047'
      background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='@{imgWidth}' height='@{imgWidth}' viewBox='0 0 @{imgWidth} @{imgWidth}'><g><g transform='translate(@{imgWidthHalf} @{imgWidthHalf}) scale(0.69 0.69) rotate(0) translate(-@{imgWidthHalf} -@{imgWidthHalf})'><svg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' xml:space='preserve' version='1.1' style='shape-rendering:geometricPrecision;text-rendering:geometricPrecision;image-rendering:optimizeQuality;' viewBox='0 0 301 355' x='0px' y='0px' fill-rule='evenodd' clip-rule='evenodd'><defs><style type='text/css'>.fil0 {fill:@{arrowColor}}</style></defs><g><path class='fil0' d='M182 116l0 216c1,30 -62,31 -63,0l0 -216 -71 71c-5,4 -11,4 -15,0l-30 -29c-4,-4 -4,-11 0,-15l140 -140c4,-4 11,-4 15,0l140 140c4,4 4,11 0,15l-30 29c-4,4 -11,4 -15,0l-71 -71z'></path></g></svg></g></g></svg>");
      background-position: center top;
      background-repeat: repeat-x;
    }
    &.bottom {
      height: @width;
      //margin-top: -@halfWidth;
      border-bottom: @border;
      background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='@{imgWidth}' height='@{imgWidth}' viewBox='0 0 @{imgWidth} @{imgWidth}'><g><g transform='translate(@{imgWidthHalf} @{imgWidthHalf}) scale(0.69 0.69) rotate(180) translate(-@{imgWidthHalf} -@{imgWidthHalf})'><svg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' xml:space='preserve' version='1.1' style='shape-rendering:geometricPrecision;text-rendering:geometricPrecision;image-rendering:optimizeQuality;' viewBox='0 0 301 355' x='0px' y='0px' fill-rule='evenodd' clip-rule='evenodd'><defs><style type='text/css'>.fil0 {fill:@{arrowColor}}</style></defs><g><path class='fil0' d='M182 116l0 216c1,30 -62,31 -63,0l0 -216 -71 71c-5,4 -11,4 -15,0l-30 -29c-4,-4 -4,-11 0,-15l140 -140c4,-4 11,-4 15,0l140 140c4,4 4,11 0,15l-30 29c-4,4 -11,4 -15,0l-71 -71z'></path></g></svg></g></g></svg>");
      background-position: center bottom;
      background-repeat: repeat-x;
    }
    &.right {
      width: @width;
      //margin-left: -@halfWidth;
      border-right: @border;
      background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='@{imgWidth}' height='@{imgWidth}' viewBox='0 0 @{imgWidth} @{imgWidth}'><g><g transform='translate(@{imgWidthHalf} @{imgWidthHalf}) scale(0.69 0.69) rotate(90) translate(-@{imgWidthHalf} -@{imgWidthHalf})'><svg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' xml:space='preserve' version='1.1' style='shape-rendering:geometricPrecision;text-rendering:geometricPrecision;image-rendering:optimizeQuality;' viewBox='0 0 301 355' x='0px' y='0px' fill-rule='evenodd' clip-rule='evenodd'><defs><style type='text/css'>.fil0 {fill:@{arrowColor}}</style></defs><g><path class='fil0' d='M182 116l0 216c1,30 -62,31 -63,0l0 -216 -71 71c-5,4 -11,4 -15,0l-30 -29c-4,-4 -4,-11 0,-15l140 -140c4,-4 11,-4 15,0l140 140c4,4 4,11 0,15l-30 29c-4,4 -11,4 -15,0l-71 -71z'></path></g></svg></g></g></svg>");
      background-position: right center;
      background-repeat: repeat-y;
    }
    &.left {
      width: @width;
      //margin-left: @halfWidth;
      border-left: @border;
      background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='@{imgWidth}' height='@{imgWidth}' viewBox='0 0 @{imgWidth} @{imgWidth}'><g><g transform='translate(@{imgWidthHalf} @{imgWidthHalf}) scale(0.69 0.69) rotate(270) translate(-@{imgWidthHalf} -@{imgWidthHalf})'><svg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' xml:space='preserve' version='1.1' style='shape-rendering:geometricPrecision;text-rendering:geometricPrecision;image-rendering:optimizeQuality;' viewBox='0 0 301 355' x='0px' y='0px' fill-rule='evenodd' clip-rule='evenodd'><defs><style type='text/css'>.fil0 {fill:@{arrowColor}}</style></defs><g><path class='fil0' d='M182 116l0 216c1,30 -62,31 -63,0l0 -216 -71 71c-5,4 -11,4 -15,0l-30 -29c-4,-4 -4,-11 0,-15l140 -140c4,-4 11,-4 15,0l140 140c4,4 4,11 0,15l-30 29c-4,4 -11,4 -15,0l-71 -71z'></path></g></svg></g></g></svg>");
      background-position: left center;
      background-repeat: repeat-y;
    }
  }

  .@{RESIZER_WRAPPER_CLASS} > * {
    @controlBgColor: #e8e8e8;

    position: absolute;
    cursor: col-resize;
    background: darken(@controlBgColor, 10%) url('/assets/blocks/core/images/splitter_ver_padded.png') center center repeat-y;
    border-left: 1px solid darken(@controlBgColor, 15%);
    border-right: 1px solid darken(@controlBgColor, 15%);

    //the resizer should be in front of the block overlays
    z-index: @overlayZ + 1;
  }

  //hide the resizers when we're dragging, except if we're dragging a resizer
  &.@{OVERLAY_DRAG_CLASS}:not(.@{OVERLAY_DRAG_CLASS}-resizer) {
    .@{RESIZER_WRAPPER_CLASS} > * {
      display: none;
    }
  }
}

.@{UNLINK_CLASS} {
  text-decoration: none;
  color: @text-color;
}

// Classes for the body that force the cursor in a certain style
body.@{FORCE_DRAG_CURSOR_CLASS}, body.@{FORCE_DRAG_CURSOR_CLASS} * {
  cursor: grabbing !important;
  cursor: -moz-grabbing !important;
  cursor: -webkit-grabbing !important;
}

body.@{FORCE_RESIZE_CURSOR_CLASS}, body.@{FORCE_RESIZE_CURSOR_CLASS} * {
  cursor: col-resize !important;
}

[property]:focus,
[data-property]:focus {
  //disabling this (for now) because the outline above already seems to do the trick
  //and this only draws double lines...
  //outline: 1px dotted rgba(100, 100, 100, 0.8);
  outline: none;
}

.@{PREVENT_SELECTION_CLASS} {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-user-drag: none;
  user-drag: none;
}

//the wrapper class where all html end up if the sidebar is open
.@{PAGE_CONTENT_CLASS} {
  position: relative; //we can only make sticky footers work when this is relative
  z-index: 0;
  //  margin-top: @mainMenuHeight;
  width: 100% - @initSidebarWidth;

  //TODO: setRollbackOnly (activate the body overflow to hidden to see why)
  //this will make the left panel scroll independently from the sidebar
  //height: 100%;
  //overflow-y: auto;
}

// force for height wrapping divs
.image {
  display: inline-block;
}

.blocks-resizing {
  cursor: col-resize;
}

ul.@{BLOCK_ACTIONS_CLASS} {
  &:extend(.form-group);
  list-style-type: none;
  padding-left: 0;

  &:last-child {
    margin-bottom: 0;
  }

  li {
    .clearfix;
    margin-bottom: 5px;

    &:last-child {
      margin-bottom: 0;
    }
  }
}

//use this as a wrapper for the text under a header (or something else) to space it up a bit
.sub-container {
  margin-top: 20px;
  margin-left: 20px;
}

//this is taken from a real world example, hope it won't change
@sidebarTabHeight: 41px;
.@{PAGE_SIDEBAR_CLASS} {

  //when resizing the sidebar, some stuff gets selected; this prevents that
  &:extend(.@{PREVENT_SELECTION_CLASS});

  //Sync this with the bgColor of the finder
  @controlBgColor: #e8e8e8;
  @bgColor: #fafafa;
  @resizerWidth: 6px;
  position: fixed;
  top: 0px;
  right: 0px;
  bottom: 0px;
  //this makes sure the sidebar is always 'over' the surface blocks (see @blockOverlayZ),
  //which makes sense, because the content of the surface blocks (the html)
  //will also be under the sidebar. Otherwise, the dotted lines hover over the sidebar
  //and this doesn't make sense.
  z-index: @sidebarZ;
  padding-left: @resizerWidth;
  .drop-shadow(-1px, 0px, 4px, 0.4);
  background-color: @bgColor;

  width: @initSidebarWidth;
  //animates the width only when not DnD-ing (see js code)
  &.@{SIDEBAR_ANIMATED_CLASS} {
    .transition(0.2s, ease-in, width);
  }

  .@{PAGE_SIDEBAR_RESIZE_CLASS} {
    position: absolute;
    left: 0;
    top: 0;
    width: @resizerWidth;
    height: 100%;
    cursor: col-resize;
    background: darken(@controlBgColor, 10%) url('/assets/blocks/core/images/splitter_ver_padded.png') center center repeat-y;
    border-left: 1px solid darken(@controlBgColor, 40%);
    border-right: 1px solid darken(@controlBgColor, 15%);
  }

  .btn {
    .fa-stack {
      // see https://fontawesome.com/how-to-use/on-the-web/styling/stacking-icons
      // Since stacked icons are styled by font awesome to be twice the size of single icons,
      // you’ll need to size down the stacked icon.
      font-size: 0.5em;
      // this also means we need to double the (relative) width of the fixed width fa icons
      &.fa-fw {
        width: (18em / 14) * 2;
      }
    }
  }

  .nav-tabs {
    height: @sidebarTabHeight;
    overflow: hidden;
    background-color: @controlBgColor;
    border-bottom: 0px;

    //make the tabs work with the negative margins below
    position: relative;
    z-index: 1000;

    //something special: only active tabs or explicitly 'show'-ing tabs are shown (this way, we have control over the 'hidden' tabs)
    & > li {
      display: none;

      //note that we've disabled this because we don't use tabs at the moment;
      // the finder is auto-loaded from the API, not from the UI
      //&.show,
      //&.active {
      //  display: block;
      //}
    }

    & > li:first-child > a {
      border-left-width: 0;
    }

    & > li > a {
      border: 1px solid transparent;
      .border-radius(0 0 0 0);
      &:hover {
        border-color: transparent;
      }
    }

    & > li.active > a {
      background-color: @bgColor;
    }
  }

  //this is the container that hold the data of the side panel (without the tabs, resizer, etc)
  .tab-content {
    position: relative; //needed to make some children absolute
    //next three make the content pane 100% in height (needed for eg. finder)
    height: 100%;
    margin-top: -@sidebarTabHeight;
    padding-top: @sidebarTabHeight;

    //only scroll starting from this panel so the resize handler doesn't scroll away
    overflow-y: auto;

    .ps-scrollbar-y-rail {
      @extra-margin: 2px;
      margin-top: @sidebarTabHeight + @extra-margin;
      margin-bottom: @extra-margin;
    }
  }

  .tab-pane {

    > .panel {
      margin: 10px;

      &.disabled {
        .panel-heading {
          .opacity(0.5);
        }
      }

      label {
        font-weight: normal;
      }

      > .collapser {
        cursor: pointer;

        //make some room for the collapser
        padding-right: 25px;
        position: relative;

        &:after {
          position: absolute;
          top: 10px;
          right: 10px;

          font-family: fontawesome;
          text-shadow: 0 1px 0 #fff;
          content: @fa-var-chevron-down;
          color: grey;

          .transition(0.2s, ease-in);
        }
        &.collapsed:after {
          .fa-icon-rotate(90deg, 1);
        }
      }

      .panel-body {

        //we hide this by default and activate it in js
        .@{PANEL_BODY_ADVANCED_CLASS} {
          @padding: 10px;
          @border: 1px solid rgba(0, 0, 0, 0.1);
          display: none;
          margin-top: 15px;

          > .collapser {
            cursor: pointer;
            padding: @padding;
            border: @border;
            .transition(0.2s, ease-in, padding-bottom);

            &:before {
              font-family: fontawesome;
              content: @fa-var-angle-down;
              float: left;
              margin-right: 5px;

              .transition(0.2s, ease-in);
            }
            &.collapsed {
              border: 1px solid transparent;
              border-top: @border;
              padding-bottom: 0;
              &:before {
                .fa-icon-rotate(-90deg, 1);
              }
            }
          }
          > .collapse > div,
          > .collapsing > div {
            padding: @padding;
            padding-top: 20px;
            border-right: @border;
            border-bottom: @border;
            border-left: @border;

            > .form-group:last-child {
              margin-bottom: 0;
            }
          }
        }

        hr {
          //small adjustment to make it look better
          margin-bottom: 15px;
        }

        //we invented this class as a means to add sub-panels
        .@{PANEL_GROUP_CLASS} {
          position: relative;
          border: 1px solid @table-border-color;
          margin-bottom: @line-height-computed;
          padding: @panel-body-padding;
          padding-top: @panel-body-padding+5px;

          > .title {
            position: absolute;
            background-color: @panel-bg;
            top: -0.80em;
            left: 0.75em;
            padding: 0 0.25em;
            font-variant: small-caps;
            color: darken(@table-border-color, 25%);
          }

          > .form-group:last-child {
            margin-bottom: 0;
          }
          //little trick if the last child is hidden:
          //show it, but with a negative margin
          > .form-group.hidden:last-child {
            display: block !important;
            height: 0px;
            overflow: hidden;
            margin-bottom: -15px;
          }
        }

        //this is the base wrapping class for a widget and it's label
        .form-group {
          .clearfix();

          .input-group {
            width: 100%;
            &.@{INPUT_WITH_BUTTONS_CLASS} {
              .inline-input-buttons();
            }

            .twitter-typeahead {

              //this is the loading-spinner addon right of an autocomplete input box
              & + .input-group-addon {
                position: absolute;
                right: 0px;
                top: 0px;
                bottom: 0px;
                z-index: 3;

                width: auto;
                background-color: transparent;
                border: none;

                //this will align the icon vertically
                line-height: inherit;
                .fa {
                  line-height: inherit
                }
              }

              //don't give the input a 'disabled' look, it's not user friendly
              input.typeahead.tt-hint {
                background-color: transparent;
              }

            }
          }

          //make all dropdowns behave more like <select>s
          .dropdown,
          .checkbox,
          .@{RADIO_GROUP_CLASS},
          .@{COLOR_GROUP_CLASS},
          .@{TOGGLE_GROUP_CLASS},
          .@{LINK_GROUP_CLASS},
          .list-group {
            @textAlign: left;
            @formAlign: right;
            @caretAlign: right;
            text-align: @formAlign;

            .pull-right();

            &.checkbox {
              top: -0.7em; //align it with the label
            }

            &.@{RADIO_GROUP_CLASS} {
              //Because of the way radio groups look (a single label and a large vertical block of radios),
              //the margin with a possibly next element looks off like there's too much spacing between them.
              //This 'fixes' that situation.
              margin-bottom: -20px;

              .radio {
                text-align: @textAlign;
                //align the first radio with the label
                &:first-child {
                  margin-top: 0;
                }
                //remove the margin of the last child because the form-group takes care of that
                &:last-child {
                  margin-bottom: 0;
                }
              }
            }

            &.@{COLOR_GROUP_CLASS} {
              input {
                display: inline-block;
                width: 50px;
              }
              .btn-reset {
                color: #333;
                .opacity(0.5);
              }
            }

            &.@{TOGGLE_GROUP_CLASS} {

              //small hack to enable simulated 'disabled state' for bootstrap toggle
              &.disabled {
                &, .btn, label {
                  .opacity(0.65);
                  .box-shadow(none);
                  //by forcing the bgColor, nothing lights up on hover
                  background-color: #ffffff;
                }
                .btn-reset {
                  display: none;
                }
              }

              //position the trashcan next to the button
              .toggle {
                display: inline-block;
              }
              .btn-reset {
                color: #333;
                .opacity(0.5);
                padding-top: 6px;
              }
            }

            &.@{LINK_GROUP_CLASS} {
              white-space: nowrap;
              overflow: hidden;
              text-overflow: ellipsis;
              max-width: 100%;
            }

            .dropdown-toggle {
              //min-width: 100px;
              text-align: @textAlign;

              .caret {
                &:extend(.pull-@{caretAlign});
                margin-top: 0.7em; //floating the caret seems to change it's height...
              }
            }
            .dropdown-menu {
              min-width: 0; //reset
              max-height: 300px; //don't let the dropdown grow outside the page
              max-width: 240px; // a good default value so large strings make the dropdown scroll horizontally
              overflow: auto; //make the menu act like a combobox
              &:extend(.dropdown-menu-@{formAlign});
              & > li {
                //it's a bit weird to align long lists of text to the right,
                //don't do it, it's difficult to read (although the menu itself is aligned to the right)
                text-align: left;

                & > a {
                  cursor: pointer;

                  small {
                    display: block;
                    .opacity(0.5);
                  }
                }
              }
            }
          }

          //this is a list widget like the slides in the admin side of the carousel
          .list-group {
            //we expect the list to be quite large, so give it full width
            width: 100%;

            //make it scroll nicely
            position: relative; //for perfect scrollbar
            max-height: 300px;
            overflow-y: auto;

            //since we're in a form-group, we'll use that margin instead
            margin-bottom: 0;

            //we'll move the borders of the first and last item to the container
            //so the overflow looks much nicer
            border-top: 1px solid @list-group-border;
            border-bottom: 1px solid @list-group-border;
            .border-top-radius(@list-group-border-radius);
            .border-bottom-radius(@list-group-border-radius);

            .list-group-item {
              .clearfix;
              text-align: left;

              //we'll put a subtle left shadow on all items to simulate a shadow on the entire list
              @leftShadow: 6px;
              .box-shadow(inset @leftShadow 0 @leftShadow -@leftShadow rgba(0, 0, 0, .125));

              &:first-child {
                border-top: none;
              }
              //this 'last' class is needed because the perfect scrollbar adds elements and
              // the last-of-type selector is messed up
              &.last {
                margin-bottom: 0;
                border-bottom: none;
              }

              //don't really know why, but real invisible
              // seems to be buggy sometimes when DnD-sorting
              &.invisible {
                visibility: visible;
                .opacity(0.3);
              }

              .handle,
              .title,
              .btn-group {
                display: block;
              }

              .handle,
              .title,
              .btn-group a {
                &:extend(.@{UNLINK_CLASS});
              }

              //the is the DnD handle
              .handle {
                .pull-left;
                margin-right: 10px;
              }

              .title {
                .text-overflow;
              }

              .btn-group {
                .pull-right;
                margin-left: 5px;

                .btn {
                  &:focus,
                  &:active {
                    .box-shadow(none);
                  }
                }
              }
            }
          }

          .slider.slider-horizontal {
            //override the bootstrap-slider defaults so the handle
            //doesn't touch the sides of the sidebar container
            display: block;
            width: auto;
            margin-left: 5px;
            margin-right: 5px;

            .slider-handle {
              //disable the gradient and override the color of the handle with a plain primary button color
              background-image: none !important;
              background-color: @btn-primary-bg;
            }
          }

          .btn-toggle {
            &:hover {
              background-color: transparent;
            }
          }
        }

        //general class used for the container of a panel actions buttons
        .actions {
          margin-top: 5px;
        }
      }
    }

    .panel.@{SIDEBAR_FINDER_PANEL_CLASS} {
      //stretches open the entire finder
      position: absolute;
      right: 0;
      left: 0;
      bottom: 0;
      top: @sidebarTabHeight;

      //we need to stretch this one open as well
      .collapse {
        height: 100%;
      }
      .panel-body {
        padding: 0px;
        height: 100%;
        margin-top: -@sidebarTabHeight;
        padding-top: @sidebarTabHeight;

        .@{SELECT_BTN_CLASS},
        .@{CANCEL_BTN_CLASS} {
          .btn-sm();
        }
        .@{SELECT_BTN_CLASS} {
          .btn-primary();
        }
        .@{CANCEL_BTN_CLASS} {
          .btn-default();
        }
      }
    }
  }
}

.@{BLOCKS_START_BUTTON} {
  display: block;
  position: fixed;
  font-size: 36px;
  top: @sidebarTabHeight/5; //"5" is trial and setRollbackOnly
  right: 20px;
  cursor: pointer;
  z-index: 10000;
  color: #000000;

  .opacity(0.4) !important;
  &:hover {
    color: #222222;
    .opacity(0.6) !important;
  }

  &:before {
    &:extend(.fa);
    content: "\f14b";
  }

  &.open {
    //mimicks .close btn
    text-shadow: 0 1px 0 #fff;
    font-size: 20px;

    &:before {
      content: "\f00d"; //fa-times
    }
  }
}

#@{SIDEBAR_CONTEXT_ID} {
  .setupLoader();
}

#@{SIDEBAR_FILES_ID} {
  .setupLoader();
}


.@{NEW_BLOCK_MODAL_CLASS},
.@{NEW_PAGE_CLASS} {

  .actions-group {
    margin-top: 40px;
  }

  .actions-group,
  .modal-body {
    padding: 0;

    @actions-hor-padding: 40px;
    .actions {
      border-right: 1px solid @btn-default-border;
    }
    &:nth-child(odd) {
      .actions {
        padding-left: @actions-hor-padding;
        padding-right: @actions-hor-padding;
      }
    }
    &:nth-child(even) {
      .actions {
        padding-left: @actions-hor-padding;
        padding-right: @actions-hor-padding;
      }
    }
    &:last-child {
      .actions {
        border-right: none;
      }
    }

    & > .title {
      text-align: center;
      font-size: 1.2em;

      .number {
        display: block;
        margin: 0 auto 15px auto;
        text-align: center;
        color: @brand-primary;
        .opacity(.3);

        .digit {
          line-height: 100%;
          font-weight: bold;
          font-family: sans-serif;
        }
      }

      &:after {
        display: block;
        content: attr(data-placeholder) !important;
        height: 1px;
        border-bottom: 1px solid @btn-default-border;
        padding-top: 25px;
        margin-bottom: 25px;
        width: 5%;
        margin-left: auto;
        margin-right: auto;
      }
    }

    .translations {
      //vertical align with left side
      padding-top: 10px;

      p {

      }
      ul {
        &:extend(.fa-ul all);

        li {
          .fa {
            &:extend(.fa-li all);
            color: @brand-primary;
          }
          a {
            color: @brand-primary;
          }
        }
      }
    }

    .copy {
      input {
        //scale down a little
        width: 80%;
      }

      //typeahead menu wrapper
      .tt-menu {

        //typeahead suggestion entry wrapper
        .tt-suggestion {

          cursor: pointer;

          //individiual sub-sections in a suggestion box
          p {
            max-width: 220px;
            white-space: nowrap;
            text-overflow: ellipsis;
            overflow-x: hidden;
            margin-right: 10px;

            &.@{WIDGET_TYPE_RES_SUG_TITLE_CLASS} {
              margin: 0;
            }
            &.@{WIDGET_TYPE_RES_SUG_SUBTITLE_CLASS} {
              .opacity(0.5);
              font-size: 0.8em;
              margin: 0;
            }
          }

          &.@{WIDGET_TYPE_RES_SUG_EMPTY_CLASS} {
            p.@{WIDGET_TYPE_RES_SUG_TITLE_CLASS} {
              font-weight: normal;
              font-style: italic;
            }
          }
        }
      }
    }

    .list-group {

      .list-group-item {
        .clearfix;

        //looks better without borders
        border: none;

        .preview,
        .caption {
        }

        @preview-size: 24px;
        @preview-margin: (@grid-gutter-width / 2);

        .preview {

          .opacity(0.5);

          width: @preview-size;
          height: @preview-size;
          margin-right: @preview-margin;

          //float on the icon and not the caption is the right way
          float: left;

          .fa {
            position: relative;
            width: 100%;
            height: 100%;
            text-align: center;

            &:before {
              position: absolute;
              font-size: @preview-size;
              top: 50%;
              left: 50%;
              margin: -(@preview-size/2) 0 0 -(@preview-size/2);
            }
          }
        }
        .caption {

          //disable this if you want the text to float around the preview
          padding-left: @preview-size + @preview-margin;

          line-height: 1em;

          * {
            display: block;
            margin: 0;
            padding: 0;

            &.title {
              padding-top: 2px;
            }
            &.description {
              .opacity(0.8);
              padding-top: 3px;
              font-size: 0.9em;
            }
          }
        }
      }
    }
  }
}

.@{NEW_BLOCK_MODAL_CLASS} {
  .modal-body {
    //max-width: 600px;
    max-height: 400px;
    //overflow-y: auto;
    margin: 20px;

    .form-group {
      margin-bottom: 0;

      .list-group {
        margin-bottom: 0;
      }
    }
  }
}






